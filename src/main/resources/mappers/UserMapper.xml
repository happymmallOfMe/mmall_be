<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmall.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.mmall.pojo.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    select id, username, password, email, phone, question, answer, role, create_time, update_time
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mmall_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mmall.pojo.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mmall_user (id, username, password, 
      email, phone, question, 
      answer, role, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
    now())
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mmall.pojo.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mmall_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePasswordByUsername" parameterType="map">
    UPDATE mmall_user
    SET password = #{passwordNew}, update_time = now()
    WHERE username = #{username}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from mmall_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.pojo.User" >
    update mmall_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <!--<if test="updateTime != null" >-->
        <!--update_time = now(),-->
      <!--</if>-->
#       实时跟新updateTime数据，无需添加是否为空判断
      update_time = now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, email, phone, question, answer, role, create_time, 
    update_time
    from mmall_user
  </select>
  <select id="checkUsername" resultType="int" parameterType="string">
    SELECT count(1) FROM mmall_user
    WHERE username = #{username}
  </select>
  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    SELECT id, username, password, email, phone, question, answer, role, create_time,
    update_time FROM mmall_user
    WHERE username = #{username}
    and password = #{password}
  </select>
  <select id="checkEmail" resultType="int" parameterType="string">
    SELECT count(1) FROM mmall_user
    WHERE email = #{email}
  </select>
  <select id="selectQuestionByUsername" resultType="string" parameterType="string">
    SELECT question
    FROM mmall_user
    WHERE username = #{username}
  </select>
  <select id="checkAnswer" resultType="int" parameterType="map">
    SELECT count(1)
    FROM mmall_user
    WHERE username = #{username}
    AND question = #{question}
    AND answer = #{answer}
  </select>
  <select id="checkPassword" resultType="int" parameterType="map">
    SELECT count(1)
    FROM mmall_user
    WHERE id = #{userId}
    AND password = #{password}
  </select>
  <!--需要添加邮箱是否为空的判断，如果email为空，
  同时遇到其他用户的email也为空，那么直接count(1)=0，即返回0，还是先与其他用户作比较，email相同，并返回count(1)>0-->
  <select id="checkEmailByUserId" resultType="int" parameterType="map">
    SELECT count(1)
    FROM mmall_user
    WHERE email = #{email}
    AND id != #{userId}
  </select>
</mapper>